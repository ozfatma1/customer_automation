<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>